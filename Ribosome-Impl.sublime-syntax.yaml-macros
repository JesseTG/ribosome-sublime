%YAML 1.2
%TAG ! tag:yaml-macros:YAMLMacros.lib.arguments:
---
name: !format 'Ribosome ({language})'
scope: !format 'source.{extension}.dna'
first_line_match: !format ".*(ribosome\\.{extension}).*"
file_extensions:
  - !format '{extension}.dna'
  - !format 'dna.{extension}'

contexts:
  main:
    - match: ""
      push: !format 'scope:source.{langcontext}'
      with_prototype:
      - match: ^\s*\.+
        comment: Ribosome (possibly with indentation and nested embedded expressions)
        scope: !format 'meta.preprocessor.{extension}.dna'
        set: ribosome_line

  ribosome_line:
    - match: \$?$
      comment: End of line
      scope: !format 'punctuation.terminator.{extension}.dna'
      pop: true

    - match: "/[+=]"
      comment: Ribosome line operator or command
      scope: !format 'keyword.operator.{extension}.dna punctuation.definition.keyword.{extension}.dna'

    - match: "/!"
      comment: Ribosome command
      scope: !format 'keyword.operator.word.{extension}.dna punctuation.definition.keyword.{extension}.dna'
      set: line_operator

    - match: "[@&][1-9]?(?={)"
      comment: Embedded expression (possibly nested and/or whitespace-stripping)
      scope: !format 'keyword.operator.{extension}.dna punctuation.definition.keyword.{extension}.dna'
      push: at_expression

    - match: .
      scope: string

  line_operator:
    - match: "(?<=/!)(output|stdout|append|separate|tabsize|include)"
      comment: One of the built-in Ribosome commands
      scope: !format 'keyword.operator.word.{extension}.dna'

    - match: \(
      comment: Begin command argument
      push: !format 'scope:source.{langcontext}'
      with_prototype:
        - match: (?=\))
          comment: End command argument
          pop: true

    - match: \)
      pop: true


  at_expression:
    - match: \{
      comment: Beginning of the @expression
      push: !format 'scope:source.{langcontext}'
      with_prototype:
        - match: "(at|amp|slash)"
          comment: Some special escape sequences
          scope: !format 'constant.character.escape.{extension}.dna'
        - match: (?=\})
          comment: End expression
          pop: true

    - match: \}
      pop: true
